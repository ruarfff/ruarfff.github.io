{"componentChunkName":"component---src-templates-blog-post-js","path":"/circleci-pr-only/","result":{"data":{"site":{"siteMetadata":{"title":"Ruairí's Blog"}},"markdownRemark":{"id":"1e3a4a46-6114-5e58-8d87-9b09ef07c0cd","excerpt":"I wanted a thing to only happen when a pull request is opened. I also wanted to do some cleanup when the pull request is closed. In my last place we used GitHub…","html":"<p>I wanted a thing to only happen when a pull request is opened. I also wanted to do some cleanup when the pull request is closed. In my last place we used GitHub actions and this was super easy.\nNow I am using <a href=\"https://circleci.com/\">CircleCI</a> and this wasn’t so easy.</p>\n<p>In this post we will look at how to only run a job on a pull request in CircleCI. There is one major caveat. We also need a way to trigger the job on a pull request. We will look at how to do this with the <a href=\"https://circleci.com/docs/api/v2/\">CircleCI web api</a>.</p>\n<h2>Conditionally run a job</h2>\n<p>There are a few options you can use to only run a job on a pull request in CircleCI. There is the option to\n<a href=\"https://discuss.circleci.com/t/only-build-pull-requests-not-every-branch/200\">only ever build on a pull request</a> but this is all or nothing\ni.e. you can never run a build on a branch without opening a pull request.</p>\n<p>Another option is, within a job, you can inspect the <a href=\"https://circleci.com/docs/2.0/env-vars/\">environment variables</a> to see if there is a pull request number like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">${CIRCLE_PULL_REQUEST<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Is a pull request\"</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<p>This is OK but it would be nice to conditionally run a whole job instead. It is not possible to read environment variables when the pipeline is loaded. It is only possible when a job is run.\nTo work around this we can use the <a href=\"https://circleci.com/developer/orbs/orb/circleci/continuation\">circleci/continuation</a> orb.\nIf you are trying this out, make sure to update your project settings in <strong>Advanced Settings -> Enable dynamic config using setup workflows</strong>.</p>\n<p>CircleCI expects all your configuration in one file called <code class=\"language-text\">.circleci/config.yml</code>. The continuation orb takes over as the entry point giving you access to the environment variables and then runs the pipeline using whatever configuration you tell it to.\nIt’s a little bit weird but it works.</p>\n<p>This is an example of using the continuation orb to conditionally run a job only on a pull request.</p>\n<p><code class=\"language-text\">.circleci/config.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">setup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.1</span>\n<span class=\"token key atrule\">orbs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">continuation</span><span class=\"token punctuation\">:</span> circleci/continuation@0.2.0\n<span class=\"token key atrule\">workflows</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">setup</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">continuation/continue</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">configuration_path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".circleci/main.yml\"</span>\n          <span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span> /home/circleci/params.json\n          <span class=\"token key atrule\">pre-steps</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n                  if [ -z \"${CIRCLE_PULL_REQUEST##*/}\" ]\n                  then\n                    IS_PR=false\n                  else\n                    IS_PR=true\n                  fi\n                  echo '{ \"is_pr\": '$IS_PR' }' >> /home/circleci/params.json</span></code></pre></div>\n<p>Note, we mentioning PR here but you could do more or less anything to configure your pipeline there. <code class=\"language-text\">/home/circleci/params.json</code> is written to and specified with <code class=\"language-text\">parameters: /home/circleci/params.json</code>.</p>\n<p><code class=\"language-text\">.circleci/main.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.1</span>\n\n<span class=\"token key atrule\">parameters</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">is_pr</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> boolean\n    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">do_something</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">docker</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cimg/base<span class=\"token punctuation\">:</span><span class=\"token number\">2021.04</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> something\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> echo 'You get the picture'\n\n<span class=\"token key atrule\">workflows</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n\n   <span class=\"token key atrule\">whence-pr</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> &lt;&lt; pipeline.parameters.is_pr <span class=\"token punctuation\">></span><span class=\"token punctuation\">></span>\n    <span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">do_something</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> something</code></pre></div>\n<p>We called the file <code class=\"language-text\">main.yml</code> here but it could be any file. You just need to specify it in the parameter called <code class=\"language-text\">configuration_path</code>. <a href=\"https://circleci.com/blog/building-cicd-pipelines-using-dynamic-config/\">This post</a> also shows another way to generate the configuration on the fly.</p>\n<p>Now we have passed the <code class=\"language-text\">is_pr</code> parameter to the pipeline. We can conditionally run things using <code class=\"language-text\">when: &lt;&lt; pipeline.parameters.is_pr >></code>.</p>\n<p>There is one major issue with this approach. Our build may have run before a PR (pull request) was ever opened. Opening a PR will not trigger a build in CircleCI.</p>\n<h2>Triggering CircleCI pipeline when a pull request is opened</h2>\n<p>First thing you must do is grab a <a href=\"https://circleci.com/docs/2.0/managing-api-tokens/\">CircleCi API token</a>. A <a href=\"https://app.circleci.com/settings/user/tokens\">personal API token</a> will do for this example.</p>\n<p>You can trigger a pipeline run like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">SCM</span><span class=\"token operator\">=</span>github\n<span class=\"token assign-left variable\">ORG</span><span class=\"token operator\">=</span>your-org-here\n<span class=\"token assign-left variable\">PROJECT</span><span class=\"token operator\">=</span>your-project-here\n<span class=\"token assign-left variable\">CIRCLE_BRANCH</span><span class=\"token operator\">=</span>a-derived-branch\n\n<span class=\"token function\">curl</span> -X POST <span class=\"token punctuation\">\\</span>\n    -H <span class=\"token string\">\"Circle-Token: <span class=\"token variable\">${CIRCLE_TOKEN}</span>\"</span> <span class=\"token punctuation\">\\</span>\n    -H <span class=\"token string\">'Content-Type: application/json'</span> <span class=\"token punctuation\">\\</span>\n    -H <span class=\"token string\">'Accept: application/json'</span> <span class=\"token punctuation\">\\</span>\n    -d <span class=\"token string\">\"{<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>branch<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>:<span class=\"token entity\" title=\"\\&quot;\">\\\"</span><span class=\"token variable\">${CIRCLE_BRANCH}</span><span class=\"token entity\" title=\"\\&quot;\">\\\"</span>}\"</span> <span class=\"token punctuation\">\\</span>\n    https://circleci.com/api/v2/project/<span class=\"token variable\">${SCM}</span>/<span class=\"token variable\">${ORG}</span>/<span class=\"token variable\">${PROJECT}</span>/pipeline</code></pre></div>\n<p>Hopefully it’s clear what values you need to change there. How you will run this bit depends on what tools you have available to you. I was using GitHub and even though we use CircleCI, there are enough free <a href=\"https://github.com/features/actions\">GitHub Action</a> minutes for me to setup an action like this:</p>\n<p><code class=\"language-text\">.github/workflows/pr.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Trigger Build on PR\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>opened<span class=\"token punctuation\">,</span> reopened<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">trigger-build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Trigger CircleCI\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">CIRCLE_BRANCH</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> github.head_ref <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">CIRCLE_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.CIRCLE_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">ORG</span><span class=\"token punctuation\">:</span> your<span class=\"token punctuation\">-</span>org<span class=\"token punctuation\">-</span>here\n          <span class=\"token key atrule\">PROJECT</span><span class=\"token punctuation\">:</span> your<span class=\"token punctuation\">-</span>project<span class=\"token punctuation\">-</span>here\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          curl -X POST \\\n          -H \"Circle-Token: ${CIRCLE_TOKEN}\" \\\n          -H 'Content-Type: application/json' \\\n          -H 'Accept: application/json' \\\n          -d \"{\\\"branch\\\":\\\"${CIRCLE_BRANCH}\\\"}\" \\\n          https://circleci.com/api/v2/project/github/${ORG}/${PROJECT}/pipeline</span></code></pre></div>\n<p>This feels like an incredible hack but it works.</p>\n<h2>A side note on doing something when a PR is merged</h2>\n<p>This has nothing to do with CircleCI but if you happen to have access to GitHub actions this might be useful.</p>\n<p><code class=\"language-text\">.github/workflows/pr-closed.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> On PR Closed\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>closed<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">on-pr-closed</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Print PR number\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">PR_NUMBER</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> github.event.number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          echo \"${PR_NUMBER}\"</span></code></pre></div>","frontmatter":{"title":"How to only run a job on a pull request in CircleCI","date":"July 27, 2021","description":null}},"previous":{"fields":{"slug":"/slack-sentiment/"},"frontmatter":{"title":"Check the Mood of a Slack Channel using Machine Learning"}},"next":null},"pageContext":{"id":"1e3a4a46-6114-5e58-8d87-9b09ef07c0cd","previousPostId":"136f235b-8c30-5131-b91c-b26857b67c25","nextPostId":null}},"staticQueryHashes":["2841359383","916993862"]}